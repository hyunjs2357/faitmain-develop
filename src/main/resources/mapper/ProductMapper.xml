<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
					
<mapper namespace="com.faitmain.domain.product.mapper.ProductMapper">

	<resultMap id="productSelectMap" type="Product">
		<result property="productNumber" 		column="product_number" 		jdbcType="INTEGER"/>
		<result property="productName"			column="product_name" 			jdbcType="VARCHAR" />
		<result property="productPrice" 		column="product_price" 			jdbcType="INTEGER" />
		<result property="productMainImage" 	column="product_main_image" 	jdbcType="VARCHAR" />
		<result property="productDetail" 		column="product_detail"			jdbcType="LONGVARCHAR" />
		<result property="productQuantity" 		column="product_quantity" 		jdbcType="INTEGER" />
		<result property="categoryCode" 		column="product_category_code" 	jdbcType="CHAR" />
		<result property="productStatus" 		column="product_status" 		jdbcType="CHAR" />
		<result property="productRegDate" 		column="reg_date" 				jdbcType="TIMESTAMP" />
		<result property="deliveryCharge" 		column="delivery_charge" 		jdbcType="INTEGER" />
		<result property="productGroupNumber" 	column="product_group_number" 	jdbcType="INTEGER" />
		
		<association property="store"  javaType="User">
			<id property="id" column="store_id" jdbcType="VARCHAR"/>
			<result property="storeName" 			column="store_name" 				jdbcType="VARCHAR"/>
			<result property="storeLogoImage" 		column="store_logo_image" 			jdbcType="VARCHAR"/>
		</association>		
		
	</resultMap>
		
	<resultMap id="imageSelectMap" type="com.faitmain.global.common.Image">
		<result property="imageNumber" column="image_number" jdbcType="INTEGER"/>
		<result property="imageClassificationCode" column="image_classification_code" jdbcType="CHAR"/>
		<result property="imageClassificationNumber" column="image_classification_number" jdbcType="INTEGER"/>
		<result property="imageName" column="image_name" jdbcType="VARCHAR"/>
	</resultMap>
	
	<!-- 상품 등록 -->
	<insert id="addProduct" parameterType="Product">		
		INSERT
		INTO product(product_name, product_price, store_id, product_main_image, product_detail, product_category_code, reg_date, delivery_charge, product_quantity, product_group_number)
		VALUES (#{productName}, #{productPrice}, #{store.id}, #{productMainImage}, #{productDetail:LONGVARCHAR}, #{categoryCode}, NOW(), 3000, #{productQuantity},
				<if test="productGroupNumber == 0">null</if>
				<if test="productGroupNumber != 0">#{productGroupNumber}</if>)
		<selectKey keyProperty="productGroupNumber" resultType="INTEGER" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
	</insert>	
	
	<!-- 상품 추가 이미지 등록 (최대 6개) -->
	<insert id="addProductImage" parameterType="com.faitmain.global.common.Image">
		INSERT 
		INTO image (image_classification_code, image_classification_number, image_name)
		VALUES ('P', #{imageClassificationNumber}, #{imageName})
	</insert>
	
	<!-- 마지막 상품번호 조회 -->
	<select id="getProductNumber" resultType="int">
    	SELECT product_number 
    	FROM product
    	WHERE product_group_number is null
    	ORDER BY product_number DESC LIMIT 1 
    </select>
    
    <!-- 
    <select id="getProductOrderCount" resultType="int">
	    SELECT product_quantity 
	    FROM product 
	    WHERE product_number = #{productNumber};
    </select>
     -->
	
	<!-- 상품 상세 조회 (상품, 상품 추가 사진, 상품 옵션 가져와야 됨)-->	    
    <select id="getProduct" parameterType="int"	resultMap="productSelectMap">
    	SELECT p.*, u.store_name, u.store_logo_image 
    	FROM product p, user u 
    	WHERE p.store_id = u.id 
    		  AND product_number = #{productNumber};
    	<!-- SELECT * 
    	FROM product
    	WHERE product_number = #{productNumber} --> 
    </select>
	
	<select id="getImage" parameterType="int"	resultMap="imageSelectMap">
		SELECT * 
		FROM image 
		WHERE image_classification_code = 'P' AND image_classification_number = #{value}
	</select>
	
	<select id="getProductOption" parameterType="int"	resultMap="productSelectMap">
		SELECT * 
		FROM product 
		WHERE product_group_number = #{productGroupNumber} 
	</select>
	<!-- ////////////////////////////////////  -->
	
	<!-- 상품 목록 조회 - 일반 User 입장 -->
	<select  id="getProductList"  parameterType="map"	resultMap="productSelectMap">
		SELECT * 
		FROM ( SELECT inner_table.* , @ROWNUM := @ROWNUM+1 AS row_seq 
			   FROM (	SELECT p.product_number, p.product_name, p.product_price, p.product_main_image, p.product_category_code, p.product_status,	p.reg_date, p.store_id
			   			FROM product p 
			   			<where>
			   				p.product_group_number is null
			   				AND p.product_status IN('01', '03')
			   				<if test="searchStore != null and searchStore != ''">
				 				AND p.store_id = #{searchStore}
							</if>
			   				<if test="searchStatus != null and searchStatus != ''">
						 		AND p.product_status = #{searchStatus}
							</if> 
							<if test="searchKeyword != null and searchKeyword != ''">
				 				AND p.product_name LIKE CONCAT('%',#{searchKeyword},'%')
							</if>										
							<if test="searchCategory != null and searchCategory != ''">
				 				AND p.product_category_code = #{searchCategory}
							</if>
			   			</where>  
			   			ORDER BY <if test="searchOrderName != null">${searchOrderName}</if>
			   					 <if test="searchOrderName == null or searchOrderName == ''">reg_date DESC</if> ) inner_table 
			   	WHERE (@ROWNUM:=0)=0 LIMIT #{endRowNum} ) result_table 
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}; 	  		  	
	 </select>

	<!-- 판매자 상품 목록 조회 -->
	 <select  id="getProductListByStoreId"  parameterType="String"	resultMap="productSelectMap">
		SELECT *
		FROM product
		<where>
			store_id = #{value}
			AND product_group_number is null
		</where>
	 </select>
	 
	 <!-- 상품 이름 리스트 -->
	 <select  id="getProductNameList"	parameterType="String"	resultType="String">
		SELECT product_name
		FROM product		 
		<where>
			product_group_number is null
			<if test="value != null and value != ''">
				AND product_name LIKE CONCAT('%',#{value},'%')				
			</if>
		</where>
	</select>
	 		
	<!-- SQL : SELECT ROW Count (현재 search 없음) -->	 
	<select  id="getTotalCount"  parameterType="map"	resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT p.product_number, p.product_name, p.product_price, p.product_main_image, p.product_category_code	
	   			FROM product p 
	   			<where>
	   				p.product_group_number is null
	   				AND p.product_status IN('01', '03')
	   				<if test="searchStore != null and searchStore != ''">
		 				AND p.store_id = #{searchStore}
					</if>
	   				<if test="searchStatus != null and searchStatus != ''">
				 		AND p.product_status = #{searchStatus}
					</if> 
					<if test="searchKeyword != null and searchKeyword != ''">
		 				AND p.product_name LIKE CONCAT('%',#{searchKeyword},'%')
					</if>										
					<if test="searchCategory != null and searchCategory != ''">
		 				AND p.product_category_code = #{searchCategory}
					</if>
	   			</where>
			) countTable						
	 </select> 
	 
	 <!-- 상품 목록 조회 - Store 입장 -->
	<select  id="getProductListForStore"  parameterType="map"	resultMap="productSelectMap">
		SELECT * 
		FROM ( SELECT inner_table.* , @ROWNUM := @ROWNUM+1 AS row_seq 
			   FROM (	SELECT p.product_number, p.product_name, p.product_price, p.product_main_image, p.product_category_code, p.product_status,	p.reg_date
			   			FROM product p 
			   			<where>
			   				p.product_group_number is null
			   				AND p.product_status IN('01', '02', '03')
			   				<if test="searchStore != null and searchStore != ''">
				 				AND p.store_id = #{searchStore}
							</if>
			   				<if test="searchStatus != null and searchStatus != ''">
						 		AND p.product_status = #{searchStatus}
							</if> 
							<if test="searchKeyword != null and searchKeyword != ''">
				 				AND p.product_name LIKE CONCAT('%',#{searchKeyword},'%')
							</if>										
							<if test="searchCategory != null and searchCategory != ''">
				 				AND p.product_category_code = #{searchCategory}
							</if>
			   			</where>  
			   			ORDER BY <if test="searchOrderName != null">${searchOrderName}</if>
			   					 <if test="searchOrderName == null or searchOrderName == ''">reg_date DESC</if> ) inner_table 
			   	WHERE (@ROWNUM:=0)=0 LIMIT #{endRowNum} ) result_table 
		WHERE row_seq BETWEEN #{startRowNum} AND #{endRowNum}; 	  		  	
	 </select>
	 
	 <!-- SQL : SELECT ROW Count (현재 search 없음) -->	 
	<select  id="getTotalCountForStore"  parameterType="map"	resultType="int">
	  	SELECT COUNT(*)
	  	FROM(	SELECT p.product_number, p.product_name, p.product_price, p.product_main_image, p.product_category_code	
	   			FROM product p 
	   			<where>
	   				p.product_group_number is null
	   				AND p.product_status IN('01', '02', '03')
	   				<if test="searchStore != null and searchStore != ''">
		 				AND p.store_id = #{searchStore}
					</if>
	   				<if test="searchStatus != null and searchStatus != ''">
				 		AND p.product_status = #{searchStatus}
					</if> 
					<if test="searchKeyword != null and searchKeyword != ''">
		 				AND p.product_name LIKE CONCAT('%',#{searchKeyword},'%')
					</if>										
					<if test="searchCategory != null and searchCategory != ''">
		 				AND p.product_category_code = #{searchCategory}
					</if>
	   			</where>
			) countTable						
	 </select> 
	 
	 <!-- 상품 주문 내역 조회 -->
	 <select id="getOrderCount" parameterType="int" resultType="int">
		SELECT count(o.order_status) FROM `order` o,  (SELECT order_number 
									    FROM product p, order_product odp
									    WHERE odp.product_number = p.product_number
											  AND p.product_group_number = #{value}) result_table
		WHERE o.order_number = result_table.order_number
      		  AND o.order_status &lt;&gt; '주문완료'
	 </select>

	<!-- 상품 수정 -->	
	<update id="updateProduct" parameterType="Product" >
		UPDATE product
		<set>
			product_name = #{productName},
			product_price = #{productPrice},
			product_main_image = #{productMainImage},
			product_detail = #{productDetail:LONGVARCHAR},
			product_category_code = #{categoryCode},
			product_quantity = #{productQuantity},
			product_status = #{productStatus}			
		</set>
		WHERE product_number = #{productNumber}
	</update>
	
	<update id="updateProductOption" parameterType="Product">
		UPDATE product
		<set>
			product_name = #{productName},
			product_quantity = #{productQuantity},
			product_status = #{productStatus}
		</set>
		WHERE product_number = #{productNumber}
	</update>
	
	<update id="updateProductImage" parameterType="com.faitmain.global.common.Image">
		UPDATE image
		<set>
			image_name = #{imageName}
		</set>
		WHERE image_number = #{imageNumber}
	</update>
	
	<update id="updateProductStatus" parameterType="Product">
		UPDATE product
		SET product_status = #{productStatus}
		WHERE product_number = #{productNumber} 
	</update>
	
	<!-- 상품 삭제 -->
	<delete id="deleteProduct" parameterType="int">
    	DELETE FROM product WHERE product_number = #{productNumber} OR product_group_number= #{productNumber}
  	</delete>
  	
  	<delete id="deleteProductOption" parameterType="int">
  		DELETE FROM product WHERE product_number = #{productNumber}
  	</delete>
  	
  	<delete id="deleteProductImage" parameterType="int">
    	DELETE FROM image WHERE image_number = #{imageNumber}
  	</delete>
  	
</mapper>